
# username to switch to
username = NULL

# save core on abort/assert
# deprecated; use ulimit instead
coredump = 0

# admin port
# used for admin's connections
admin_port = 0

# Log verbosity, possible values: ERROR=1, CRIT=2, WARN=3, INFO=4(default), DEBUG=5
log_level = 4

# Size of slab arena in GB
slab_alloc_arena = 1

# Size of minimal allocation unit
slab_alloc_minimal = 64

# Growth factor, each subsequent unit size is factor * prev unit size
slab_alloc_factor = 2

# working directory (daemon will chdir(2) to it)
work_dir = NULL

# name of pid file
pid_file = "tarantool.pid"

# logger command will be executed via /bin/sh -c {}
# example: 'exec cronolog /var/log/tarantool/%Y-%m/%Y-%m-%d/tarantool.log'
# example: 'exec extra/logger.pl /var/log/tarantool/tarantool.log'
# when logger is not configured all logging going to STDERR
logger = NULL

# make logging nonblocking, this potentially can lose some logging data
logger_nonblock = 1

# delay between loop iterations
io_collect_interval = 0

# size of listen backlog
backlog = 1024

# network io readahead
readahead = 16320

# path for search scripts
lua_path = "lua/?.lua;scripts/lua/?.lua"

# feed WAL to remote replicas
# feeder accepts it's clients on wal_feeder_bind_ipaddr:wal_feeder_bind_port
wal_feeder_bind_ipaddr = NULL
wal_feeder_bind_port = 0

# Directory with WAL files to serve
wal_feeder_dir = NULL

# custom proc title is appended after normal
custom_proc_title = NULL
