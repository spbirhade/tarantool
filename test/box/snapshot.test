# encoding: tarantool
#
import os
import time
import yaml
from signal import SIGUSR1

print """
# Verify that the server starts from a pre-recorded snapshot.
# This way we check that the server can read old snapshots (v11)
# going forward.
"""
server.stop()
snapshot = os.path.join(vardir, "00000000000000000500.snap")
os.symlink(os.path.abspath("box/00000000000000000500.snap"), snapshot)
server.start()
for i in range(0, 501):
  exec sql "select * from t0 where k0={0}".format(i)
print "# Restore the default server..."
server.stop()
os.unlink(snapshot)
server.start()

print """#
# A test case for: http://bugs.launchpad.net/bugs/686411
# Check that 'save snapshot' does not overwrite a snapshot
# file that already exists. Verify also that any other
# error that happens when saving snapshot is propagated
# to the caller.
"""
exec sql "insert into t0 values (1, 'first tuple')"
exec admin "save snapshot"

# In absence of data modifications, two consecutive
# 'save snapshot' statements will try to write
# into the same file, since file name is based
# on LSN.
#  Don't allow to overwrite snapshots.
exec admin "save snapshot"
#
# Increment LSN
exec sql "insert into t0 values (2, 'second tuple')"
#
# Check for other errors, e.g. "Permission denied".
print "# Make 'var' directory read-only."
os.chmod(vardir, 0555)
exec admin "save snapshot"

# cleanup
os.chmod(vardir, 0755)
exec sql "delete from t0 where k0 = 1"
exec sql "delete from t0 where k0 = 2"

print """#
# A test case for http://bugs.launchpad.net/bugs/727174
# "tarantool_silverbox crashes when saving snapshot on SIGUSR1"
#"""

print """
# Increment the lsn number, to make sure there is no such snapshot yet
#"""

exec sql "insert into t0 values (1, 'Test tuple')"

info = yaml.load(admin.execute("show info\n"))["info"]

pid = info["pid"]
snapshot = str(info["lsn"]).zfill(20) + ".snap"
snapshot = os.path.join(vardir, snapshot)

iteration = 0

MAX_ITERATIONS = 100

while not os.access(snapshot, os.F_OK) and iteration < MAX_ITERATIONS:
  if iteration % 10 == 0:
    os.kill(pid, SIGUSR1)
  time.sleep(0.1)
  iteration = iteration + 1

if iteration == 0 or iteration >= MAX_ITERATIONS:
  print "Snapshot is missing."
else:
  print "Snapshot exists."

exec sql "delete from t0 where k0=1"

# vim: syntax=python spell
